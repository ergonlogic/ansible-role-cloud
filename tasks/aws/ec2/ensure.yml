---
- name: Set default EC2 VM states
  set_fact:
    cloud: "{{ cloud | combine( { 'aws': { 'ec2': { item.key : { 'state': ec2_state } } } }, recursive=True ) }}"
  when: item.value.state is undefined
  with_dict: "{{ cloud.aws.ec2 }}"

- name: Ensure the state of existing EC2 VMs
  ec2:
    instance_tags:
      Name: "{{ item.key }}"
    count_tag:
      Name: "{{ item.key }}"
    exact_count: "{{ (item.value.state == 'absent') | ternary(0,1) }}"
    instance_type: "{{ item.value.instance_type | default(ec2_instance_type) }}"
    region: "{{ item.value.region | default(ec2_region) }}"
    image: "{{ item.value.image | default(ec2_image) }}"
    groups: "{{ item.value.groups | default(ec2_groups) }}"
    key_name: "{{ item.value.key_name | default(lookup('env','USER')) }}"
    wait: yes
  register: existing_ec2_vms
  when: cached_ec2_vms[item.key] is defined
  with_dict: "{{ cloud.aws.ec2 }}"

